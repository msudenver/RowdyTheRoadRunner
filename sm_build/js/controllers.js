// Generated by CoffeeScript 1.6.2
"use strict";
var MajorsAndMinorsApp, certifications, concentrations, licensures, list, majors, masters, minors, regEx, vis;

list = {};

list.all = [];

regEx = /X/i;

list.total = 0;

list.types = ["All", "Master", 'Major', 'Minor', 'Concentration', 'Certification', 'Licensure'];

majors = [];

minors = [];

licensures = [];

certifications = [];

concentrations = [];

masters = [];

vis = {};

vis.show = false;

MajorsAndMinorsApp = angular.module("MajorsAndMinorsApp", []);

MajorsAndMinorsApp.controller("Visualization", function($scope) {
  var i;

  $scope.show = vis.show;
  $scope.dataset = (function() {
    var _i, _results;

    _results = [];
    for (i = _i = 1; _i <= 30; i = ++_i) {
      _results.push(Math.floor(Math.random() * 30));
    }
    return _results;
  })();
  d3.select(".d3vis").selectAll("div").attr("class", "bar").data($scope.dataset).enter().append("div").attr("class", "bar").style("height", function(d) {
    return d * 4 + "px";
  });
  return $scope.showVis = function() {
    return $scope.show = !$scope.show;
  };
});

MajorsAndMinorsApp.controller("ProgramController", function($scope, $http) {
  var lookup;

  lookup = function(item, category) {
    var found;

    found = $.inArray(item, list.all);
    if (found >= 0) {
      return category.push(list.all[found]);
    } else if (found < 0) {
      return category.splice(found, 1);
    }
  };
  ($http({
    method: 'GET',
    cache: true,
    url: '/dataset/csv/set3.csv'
  })).success(function(data) {
    var i, _i, _len, _ref, _results;

    list.all = d3.csv.parse(data);
    $scope.list = list.all;
    _ref = list.all;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      i = _ref[_i];
      if (i.major.match(regEx)) {
        _results.push(lookup(i, majors));
      } else if (i.minor.match(regEx)) {
        _results.push(lookup(i, minors));
      } else if (i.licensure.match(regEx)) {
        _results.push(lookup(i, licensures));
      } else if (i.certification.match(regEx)) {
        _results.push(lookup(i, certifications));
      } else if (i.concentration.match(regEx)) {
        _results.push(lookup(i, concentrations));
      } else if (i.masters.match(regEx)) {
        _results.push(lookup(i, masters));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  });
  $scope.types = list.types;
  $scope.$watch("list.length", function(newVal) {
    if (newVal === 234) {
      list.total = 225;
    } else {
      list.total = newVal;
    }
    return $scope.total = list.total;
  });
  $scope.$watch("search", function(newVal) {
    if (newVal && newVal.match(/[a-z]|[0-9]/gi)) {
      return $scope.list = list.all;
    }
  });
  $scope.sortByType = function($event, type) {
    var value_checked;

    value_checked = $event.target.id;
    $scope.changeSelectionText(value_checked);
    $scope.list = list.all;
    if (value_checked) {
      switch (type) {
        case "Major":
          return $scope.list = majors;
        case "Minor":
          return $scope.list = minors;
        case "Concentration":
          return $scope.list = concentrations;
        case "Licensure":
          return $scope.list = licensures;
        case "Certification":
          return $scope.list = certifications;
        case "Master":
          return $scope.list = masters;
        case "All":
          return $scope.list = list.all;
      }
    } else {
      return $scope.list = list.all;
    }
  };
  $scope.changeSelectionText = function(selection) {
    var em;

    em = $('#changeSelectionType');
    if (selection === "All") {
      return em.text("degree options");
    } else {
      return em.text(selection + "s");
    }
  };
  return $scope.altTag = function(name, program, type) {
    if (program) {
      if (program.match(regEx)) {
        return "" + name + " " + type + " offered";
      }
    } else {
      return "" + name + " " + type + " not offered";
    }
  };
});
